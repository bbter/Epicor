{"version":3,"sources":["components/Header.js","components/Footer.js","components/Loading.js","App.js","serviceWorker.js","index.js","models/index.js","stores/user.js","stores/history.js","stores/image.js","stores/auth.js","stores/index.js","components/logo.svg"],"names":["Header","styled","header","Logo","img","StyledLink","NavLink","Login","div","StyledButton","Button","Component","observer","history","useHistory","useStores","UserStore","AuthStore","src","LogoUrl","to","activeClassName","exact","currentUser","type","onClick","logout","console","log","push","Footer","footer","Loading","Home","lazy","History","About","Register","App","fallback","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","AV","init","appId","appKey","serverURL","Auth","username","password","user","User","setUsername","setPassword","Promise","resolve","reject","signUp","loginedUser","logIn","logOut","current","Uploader","add","file","filename","item","Object","avFile","File","set","save","serveFile","find","page","limit","query","Query","include","skip","descending","equalTo","results","makeObservable","this","attributes","localStorage","setItem","JSON","stringify","observable","parse","getItem","action","newList","list","concat","isLoading","append","length","hasMore","finally","newFilename","newFile","isUploading","serverFile","err","values","pullUser","resetUser","HistoryStore","reset","ImageStore","context","createContext","useContext","module","exports"],"mappings":"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","file":"static/js/main.74617f44.chunk.js","sourcesContent":["import React from \"react\";\r\nimport LogoUrl from \"./logo.svg\";\r\nimport {NavLink,useHistory} from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport {Button} from \"antd\";\r\nimport {useStores} from \"../stores\";\r\nimport {observer} from \"mobx-react\";\r\n\r\nconst Header = styled.header`\r\n    display:flex;\r\n    align-items:center;\r\n    padding:10px 100px;\r\n    background-color:#02101F;\r\n    color:#fff;\r\n`;\r\nconst Logo = styled.img`\r\n    height:30px\r\n`;\r\nconst StyledLink = styled(NavLink)`\r\n    color:#fff;\r\n    margin-left:30px;\r\n    \r\n    &.active{\r\n        border-bottom:1px solid #fff;\r\n    }\r\n`;\r\n\r\nconst Login = styled.div`\r\n  margin-left: auto;\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n   margin-left: 10px;\r\n`;\r\n\r\nconst Component = observer(() => {\r\n\r\n    const history = useHistory()\r\n    const {UserStore,AuthStore} = useStores()\r\n\r\n\r\n    const handleLogout = () => {\r\n        AuthStore.logout()\r\n    }\r\n\r\n    const handleLogin = () => {\r\n        console.log('跳转到登录页')\r\n        history.push('/login')\r\n    }\r\n\r\n    const handleRegister = () => {\r\n        console.log('跳转到注册页面')\r\n        history.push('/register')\r\n    }\r\n\r\n    return (\r\n        <Header>\r\n            <Logo src={LogoUrl}/>\r\n            <nav>\r\n                <StyledLink to=\"/\" activeClassName=\"active\" exact>首页</StyledLink>\r\n                <StyledLink to=\"/history\" activeClassName=\"active\">上传历史</StyledLink>\r\n                <StyledLink to=\"/about\" activeClassName=\"active\">关于我</StyledLink>\r\n            </nav>\r\n            <Login>\r\n                {\r\n                    UserStore.currentUser ? <>\r\n                        {UserStore.currentUser} <StyledButton type=\"primary\" onClick={handleLogout}>注销</StyledButton>\r\n                    </> : <>\r\n                        <StyledButton type=\"primary\" onClick={handleLogin}>登录</StyledButton>\r\n                        <StyledButton type=\"primary\" onClick={handleRegister}>注册</StyledButton>\r\n                    </>\r\n                }\r\n            </Login>\r\n        </Header>\r\n    );\r\n})\r\n\r\nexport default Component;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Footer = styled.footer`\r\n    padding: 10px 100px;\r\n    text-align: center;\r\n    font-size: 12px;\r\n    color: #aaa;\r\n`\r\n\r\n\r\nfunction Component() {\r\n    return (\r\n        <Footer>\r\n            <p>Footer</p>\r\n        </Footer>\r\n    );\r\n}\r\n\r\nexport default Component;\r\n","import React from \"react\";\r\nfunction Loading(){\r\n    return (\r\n        <div>Loading...</div>\r\n    )\r\n}\r\n\r\nexport default Loading","import React, {Suspense, lazy} from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport Loading from \"./components/Loading\";\n\nimport {\n    Switch,\n    Route\n} from \"react-router-dom\";\n\nconst Home = lazy(() => import(\"./pages/Home\"));\nconst History = lazy(() => import(\"./pages/History\"));\nconst About = lazy(() => import(\"./pages/About\"));\nconst Login = lazy(() => import(\"./pages/Login\"));\nconst Register = lazy(() => import(\"./pages/Register\"));\n\nfunction App() {\n    return (\n        <>\n            <Header/>\n            <main>\n                <Suspense fallback={<Loading/>}>\n                    <Switch>\n                        <Route path=\"/\" exact component={Home}/>\n                        <Route path=\"/history\" component={History}/>\n                        <Route path=\"/about\" component={About}/>\n                        <Route path=\"/login\" component={Login}/>\n                        <Route path=\"/register\" component={Register}/>\n                    </Switch>\n                </Suspense>\n            </main>\n            <Footer/>\n        </>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"antd/dist/antd.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport {\n    HashRouter as Router\n} from \"react-router-dom\";\n\nReactDOM.render(\n    <Router>\n        <App/>\n    </Router>,\n    document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import AV, {User} from \"leancloud-storage\";\r\n\r\nAV.init({\r\n    appId: \"K68R89836OGSdv9RPnlhel0I-gzGzoHsz\",\r\n    appKey: \"kQUtnql9BMq4Y0qdpGApg6p3\",\r\n    serverURL: \"https://k68r8983.lc-cn-n1-shared.com\"\r\n});\r\n\r\n\r\nconst Auth = {\r\n    register(username, password) {\r\n        let user = new User();\r\n        user.setUsername(username);\r\n        user.setPassword(password);\r\n        return new Promise((resolve, reject) => {\r\n            user.signUp().then(loginedUser => resolve(loginedUser), error => reject(error));\r\n        });\r\n    },\r\n    login(username, password) {\r\n        return new Promise((resolve, reject) => {\r\n            User.logIn(username, password).then(loginedUser => resolve(loginedUser), error => reject(error));\r\n        });\r\n    },\r\n    logout() {\r\n        User.logOut();\r\n    },\r\n    getCurrentUser() {\r\n        return User.current();\r\n    }\r\n};\r\n\r\n\r\nconst Uploader = {\r\n    add(file, filename) {\r\n        const item = new AV.Object(\"Images\");\r\n        const avFile = new AV.File(filename, file);\r\n        item.set(\"filename\", filename);\r\n        item.set(\"owner\", AV.User.current());\r\n        item.set(\"url\", avFile);\r\n        return new Promise((resolve, reject) => {\r\n            item.save().then(serveFile => resolve(serveFile), error => reject(error));\r\n        });\r\n    },\r\n\r\n    find({page = 0, limit = 10}) {\r\n        const query = new AV.Query(\"Images\");\r\n        query.include(\"owner\");\r\n        query.limit(limit);\r\n        query.skip(page * limit);\r\n        query.descending(\"createdAt\");\r\n        query.equalTo(\"owner\", AV.User.current());\r\n        return new Promise((resolve, reject) => {\r\n            query.find()\r\n                .then(results => resolve(results))\r\n                .catch(error => reject(error));\r\n        });\r\n    }\r\n};\r\n\r\nwindow.Uploader = Uploader\r\n\r\n\r\nexport {Auth, Uploader};","import {observable, action, makeObservable} from \"mobx\";\r\nimport {Auth} from \"../models\";\r\n\r\nclass UserStore {\r\n    constructor() {\r\n        makeObservable(this);\r\n    }\r\n\r\n    @observable currentUser = JSON.parse(localStorage.getItem('currentUser')) || ''\r\n\r\n    @action pullUser(){\r\n        this.currentUser =Auth.getCurrentUser().attributes.username\r\n        localStorage.setItem('currentUser',JSON.stringify(this.currentUser))\r\n    }\r\n\r\n    @action resetUser(){\r\n        this.currentUser = null\r\n    }\r\n\r\n}\r\n\r\nexport default new UserStore();","import {observable, action, makeObservable} from \"mobx\";\r\nimport {Uploader} from \"../models\";\r\nimport {message} from \"antd\";\r\n\r\nclass HistoryStore {\r\n    constructor() {\r\n        makeObservable(this);\r\n    }\r\n\r\n    @observable list = [];\r\n    @observable isLoading = false;\r\n    @observable hasMore = true;\r\n    @observable page = 0;\r\n    limit = 10;\r\n\r\n    @action append(newList) {\r\n        this.list = this.list.concat(newList);\r\n    }\r\n\r\n    @action find() {\r\n        this.isLoading = true;\r\n        Uploader.find({page: this.page, limit: this.limit}).then(newList => {\r\n            this.append(newList);\r\n            this.page++;\r\n            if (newList.length < this.limit) {\r\n                this.hasMore = false;\r\n            }\r\n        }).catch(error => {\r\n            message.error(\"加载数据失败\");\r\n        }).finally(() => {\r\n            this.isLoading = false;\r\n        });\r\n    }\r\n\r\n    @action reset() {\r\n        this.list = [];\r\n        this.isLoading = false;\r\n        this.hasMore = true;\r\n        this.page = 0;\r\n        this.limit = 10;\r\n\r\n    }\r\n\r\n}\r\n\r\nexport default new HistoryStore();","import {observable, action, makeObservable} from \"mobx\";\r\nimport {Uploader} from \"../models\";\r\nimport {message} from \"antd\";\r\n\r\nclass ImageStore {\r\n    constructor() {\r\n        makeObservable(this);\r\n    }\r\n\r\n    @observable filename = \"\";\r\n    @observable file = null;\r\n    @observable isUploading = false;\r\n    @observable serverFile = null;\r\n\r\n    @action setFilename(newFilename) {\r\n        this.filename = newFilename;\r\n    }\r\n\r\n    @action setFile(newFile) {\r\n        this.file = newFile;\r\n    }\r\n\r\n    @action upload() {\r\n        this.isUploading = true;\r\n        this.serverFile = null;\r\n        return new Promise((resolve, reject) => {\r\n            Uploader.add(this.file, this.filename)\r\n                .then(serverFile => {\r\n                    this.serverFile = serverFile;\r\n                    resolve(serverFile);\r\n                }).catch(err => {\r\n                message.error(\"上传失败\");\r\n                reject(err);\r\n            }).finally(() => {\r\n                this.isUploading = false;\r\n            });\r\n        });\r\n\r\n    }\r\n\r\n    @action reset() {\r\n        this.isUploading = false;\r\n        this.serverFile = null;\r\n    }\r\n\r\n}\r\n\r\nexport default new ImageStore();","import {observable, action, makeObservable} from \"mobx\";\r\nimport {Auth} from \"../models\";\r\nimport UserStore from \"./user\";\r\nimport HistoryStore from \"./history\";\r\nimport ImageStore from \"./image\";\r\nimport {message} from \"antd\";\r\n\r\nclass AuthStore {\r\n    constructor() {\r\n        makeObservable(this);\r\n    }\r\n\r\n    @observable values = {\r\n        username: \"\",\r\n        password: \"\",\r\n    };\r\n\r\n    @action setUsername(username) {\r\n        this.values.username = username;\r\n    }\r\n\r\n    @action setPassword(password) {\r\n        this.values.password = password;\r\n    }\r\n\r\n    @action login() {\r\n        return new Promise((resolve, reject) => {\r\n            Auth.login(this.values.username, this.values.password)\r\n                .then(user => {\r\n                    UserStore.pullUser();\r\n                    resolve(user);\r\n                }).catch(err => {\r\n                UserStore.resetUser();\r\n                message.error(\"登录失败\");\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    @action register() {\r\n        return new Promise((resolve, reject) => {\r\n            Auth.register(this.values.username, this.values.password)\r\n                .then(user => {\r\n                    UserStore.pullUser();\r\n                    resolve(user);\r\n                }).catch(err => {\r\n                UserStore.resetUser();\r\n                message.error(\"注册失败\");\r\n                reject(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    @action logout() {\r\n        Auth.logout();\r\n        UserStore.resetUser();\r\n        HistoryStore.reset();\r\n        ImageStore.reset();\r\n    }\r\n}\r\n\r\nexport default new AuthStore();","import {createContext, useContext} from \"react\";\r\nimport AuthStore from \"./auth\";\r\nimport UserStore from './user'\r\nimport ImageStore from './image'\r\nimport HistoryStore from './history'\r\n\r\n\r\nconst context = createContext({\r\n    AuthStore,\r\n    UserStore,\r\n    ImageStore,\r\n    HistoryStore\r\n});\r\n\r\nexport const useStores = () => useContext(context)\r\n\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}