{"version":3,"sources":["components/Uploader.js","components/Tips.js","pages/Home.js"],"names":["Dragger","Upload","Result","styled","div","H1","h1","Image","img","Component","observer","useStores","ImageStore","UserStore","ref1","useRef","ref2","store","useLocalStore","width","height","setWidth","setHeight","serverFile","attributes","url","widthStr","heightStr","props","showUploadList","beforeUpload","file","setFile","setFilename","name","currentUser","message","warning","test","type","size","error","upload","then","console","log","catch","err","tip","spinning","isUploading","className","InboxOutlined","href","rel","target","filename","src","ref","onChange","current","value","placeholder","fullStr","Tips","children","Home","Uploader"],"mappings":"giBAOOA,EAAWC,IAAXD,QAEDE,EAASC,IAAOC,IAAV,KAKNC,EAAKF,IAAOG,GAAV,KAIFC,EAAQJ,IAAOK,IAAV,KA8GIC,EA1GGC,aAAS,WAAO,IAAD,EACGC,cAAzBC,EADsB,EACtBA,WAAYC,EADU,EACVA,UACbC,EAAOC,mBACPC,EAAOD,mBACPE,EAAQC,aAAc,iBAAO,CAC/BC,MAAO,KACPC,OAAQ,KACRC,SAH+B,SAGtBF,GACLF,EAAME,MAAQA,GAElBG,UAN+B,SAMrBF,GACNH,EAAMG,OAASA,GAEnB,eACI,OAAOH,EAAME,MAAN,aAAoBF,EAAME,OAAU,IAE/C,gBACI,OAAOF,EAAMG,OAAN,aAAqBH,EAAMG,QAAW,IAEjD,cACI,OAAOR,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IAAM,gBAAkBR,EAAMS,SAAWT,EAAMU,eAaxGC,EAAQ,CACVC,gBAAgB,EAChBC,aAAc,SAAAC,GAGV,OAFAnB,EAAWoB,QAAQD,GACnBnB,EAAWqB,YAAYF,EAAKG,MACE,OAA1BrB,EAAUsB,aACVC,IAAQC,QAAQ,qDACT,GAEN,wCAAwCC,KAAKP,EAAKQ,MAInDR,EAAKS,KAAO,SACZJ,IAAQK,MAAM,+BACP,QAGX7B,EAAW8B,SACNC,MAAK,SAACpB,GACHqB,QAAQC,IAAI,4BACZD,QAAQC,IAAItB,MACbuB,OAAM,SAACC,GACVH,QAAQC,IAAIE,GACZH,QAAQC,IAAI,gCAdZT,IAAQK,MAAM,+EACP,KAmBnB,OACI,6BACI,kBAAC,IAAD,CAAMO,IAAI,qBAAMC,SAAUrC,EAAWsC,aACjC,kBAAClD,EAAY4B,EACT,uBAAGuB,UAAU,wBACT,kBAACC,EAAA,EAAD,OAEJ,uBAAGD,UAAU,mBAAb,gEACA,uBAAGA,UAAU,mBAAb,oGAMJvC,EAAWW,WAAa,kBAACrB,EAAD,KACpB,kBAACG,EAAD,iCACA,4BACI,wDACA,4BAAI,uBAAGgD,KAAMzC,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,IAAK6B,IAAI,sBAC/DC,OAAO,UAAU3C,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,MACxE,kDACA,4BAAKb,EAAW4C,UAChB,wDACA,4BACI,kBAACjD,EAAD,CAAOkD,IAAK7C,EAAWW,WAAWC,WAAWC,IAAID,WAAWC,OAEhE,wDACA,4BACI,2BAAOiC,IAAK5C,EAAM6C,SAlElB,WACpB1C,EAAMI,SAASP,EAAK8C,QAAQC,QAiEqCC,YAAY,2CACzD,2BAAOJ,IAAK1C,EAAM2C,SA/DjB,WACrB1C,EAAMK,UAAUN,EAAK4C,QAAQC,QA8DqCC,YAAY,4CAE9D,4BACI,uBAAGT,KAAMpC,EAAM8C,QAASR,OAAO,SAASD,IAAI,uBAAuBrC,EAAM8C,YAGzE,S,0KCnH5B,IAAMC,EAAO7D,IAAOC,IAAV,KAkBKK,EAVGC,aAAS,YAAiB,IAAfuD,EAAc,EAAdA,SAClBpD,EAAaF,cAAbE,UACP,OACI,oCACKA,EAAUsB,YAAc,KAAO,kBAAC6B,EAAD,KAAOC,OCZ7CC,EAAOxD,aAAS,WAElB,OACI,oCACI,kBAAC,EAAD,oDAEA,kBAACyD,EAAD,UAKGD","file":"static/js/9.0cd9e005.chunk.js","sourcesContent":["import React, {useRef} from \"react\";\r\nimport {useStores} from \"../stores\";\r\nimport {observer, useLocalStore} from \"mobx-react\";\r\nimport {message, Upload, Spin} from \"antd\";\r\nimport {InboxOutlined} from \"@ant-design/icons\";\r\nimport styled from \"styled-components\";\r\n\r\nconst {Dragger} = Upload;\r\n\r\nconst Result = styled.div`\r\n  margin-top: 30px;\r\n  border: 1px dashed #ccc;\r\n  padding: 20px;\r\n`;\r\nconst H1 = styled.h1`\r\n  margin: 20px 0;\r\n  text-align: center;\r\n`;\r\nconst Image = styled.img`\r\n  max-width: 300px;\r\n`;\r\n\r\nconst Component = observer(() => {\r\n    const {ImageStore, UserStore} = useStores();\r\n    const ref1 = useRef();\r\n    const ref2 = useRef();\r\n    const store = useLocalStore(() => ({\r\n        width: null,\r\n        height: null,\r\n        setWidth(width) {\r\n            store.width = width;\r\n        },\r\n        setHeight(height) {\r\n            store.height = height;\r\n        },\r\n        get widthStr() {\r\n            return store.width ? `/w/${store.width}` : \"\";\r\n        },\r\n        get heightStr() {\r\n            return store.height ? `/h/${store.height}` : \"\";\r\n        },\r\n        get fullStr() {\r\n            return ImageStore.serverFile.attributes.url.attributes.url + \"?imageView2/0\" + store.widthStr + store.heightStr;\r\n        }\r\n\r\n    }));\r\n\r\n    const bindWidthChange = () => {\r\n        store.setWidth(ref1.current.value);\r\n    };\r\n\r\n    const bindHeightChange = () => {\r\n        store.setHeight(ref2.current.value);\r\n    };\r\n\r\n    const props = {\r\n        showUploadList: false,\r\n        beforeUpload: file => {\r\n            ImageStore.setFile(file);\r\n            ImageStore.setFilename(file.name);\r\n            if (UserStore.currentUser === null) {\r\n                message.warning(\"请先登录再上传！\");\r\n                return false;\r\n            }\r\n            if (!/(svg$)|(png$)|(jpg$)|(jpeg$)|(gif$)/ig.test(file.type)) {\r\n                message.error(\"只能上传svg/png/jpg/jpeg/gif格式的图片\");\r\n                return false;\r\n            }\r\n            if (file.size > 1024 * 1024) {\r\n                message.error(\"图片最大1M\");\r\n                return false;\r\n            }\r\n\r\n            ImageStore.upload()\r\n                .then((serverFile) => {\r\n                    console.log(\"上传成功\");\r\n                    console.log(serverFile);\r\n                }).catch((err) => {\r\n                console.log(err);\r\n                console.log(\"上传失败\");\r\n            });\r\n        }\r\n    };\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Spin tip=\"上传中\" spinning={ImageStore.isUploading}>\r\n                <Dragger {...props}>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        <InboxOutlined/>\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">点击或者拖拽上传图片</p>\r\n                    <p className=\"ant-upload-hint\">\r\n                        仅支持.png/.gif/.jpg/.svg格式的图片,图片最大1M\r\n                    </p>\r\n                </Dragger>\r\n            </Spin>\r\n            {\r\n                ImageStore.serverFile ? <Result>\r\n                    <H1>上传结果</H1>\r\n                    <dl>\r\n                        <dt>线上地址</dt>\r\n                        <dd><a href={ImageStore.serverFile.attributes.url.attributes.url} rel=\"noopener noreferrer\"\r\n                               target=\"_blank\">{ImageStore.serverFile.attributes.url.attributes.url}</a></dd>\r\n                        <dt>文件名</dt>\r\n                        <dd>{ImageStore.filename}</dd>\r\n                        <dt>图片预览</dt>\r\n                        <dd>\r\n                            <Image src={ImageStore.serverFile.attributes.url.attributes.url}/>\r\n                        </dd>\r\n                        <dt>更多定制</dt>\r\n                        <dd>\r\n                            <input ref={ref1} onChange={bindWidthChange} placeholder=\"最大宽度(可选)\"/>\r\n                            <input ref={ref2} onChange={bindHeightChange} placeholder=\"最大高度(可选)\"/>\r\n                        </dd>\r\n                        <dd>\r\n                            <a href={store.fullStr} target=\"_blank\" rel=\"noopener noreferrer\">{store.fullStr}</a>\r\n                        </dd>\r\n                    </dl>\r\n                </Result> : null\r\n            }\r\n\r\n        </div>\r\n    );\r\n});\r\n\r\n\r\nexport default Component;","import React from \"react\";\r\nimport {useStores} from \"../stores\";\r\nimport {observer} from \"mobx-react\";\r\nimport styled from 'styled-components'\r\n\r\nconst Tips = styled.div`\r\n  background: orange;\r\n  padding: 10px;\r\n  margin: 30px 0;\r\n  color: #fff;\r\n  border-radius: 4px;\r\n`\r\n\r\nconst Component = observer(({children}) => {\r\n    const {UserStore} = useStores();\r\n    return (\r\n        <>\r\n            {UserStore.currentUser ? null : <Tips>{children}</Tips>}\r\n        </>\r\n    );\r\n});\r\n\r\n\r\nexport default Component;","import React from \"react\";\r\nimport {observer} from \"mobx-react\";\r\nimport Uploader from '../components/Uploader'\r\nimport Tips from '../components/Tips'\r\n\r\nconst Home = observer(() => {\r\n\r\n    return (\r\n        <>\r\n            <Tips>请先登录再上传~</Tips>\r\n\r\n            <Uploader/>\r\n        </>\r\n    )\r\n})\r\n\r\nexport default Home\r\n"],"sourceRoot":""}